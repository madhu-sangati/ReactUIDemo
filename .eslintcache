[{"F:\\React-bootstrap-demos\\arcdevelopment\\src\\index.js":"1","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\App.js":"2","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header.js":"3","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\ContainerDemo.js":"4","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header2.js":"5","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Theme.js":"6","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\menubar.js":"7","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header3.js":"8","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header4.js":"9","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header5.js":"10","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header6.js":"11","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header7.js":"12","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header8.js":"13","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Footer.js":"14","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\footergrid.js":"15"},{"size":211,"mtime":1606890047078,"results":"16","hashOfConfig":"17"},{"size":2402,"mtime":1607406386182,"results":"18","hashOfConfig":"17"},{"size":2411,"mtime":1606627027309,"results":"19","hashOfConfig":"17"},{"size":453,"mtime":1606299763565,"results":"20","hashOfConfig":"17"},{"size":7243,"mtime":1606991788010,"results":"21","hashOfConfig":"17"},{"size":731,"mtime":1607334177108,"results":"22","hashOfConfig":"17"},{"size":3379,"mtime":1606891156513,"results":"23","hashOfConfig":"17"},{"size":8752,"mtime":1606972119924,"results":"24","hashOfConfig":"17"},{"size":14790,"mtime":1607234152207,"results":"25","hashOfConfig":"17"},{"size":15216,"mtime":1607244770779,"results":"26","hashOfConfig":"17"},{"size":14247,"mtime":1607244804107,"results":"27","hashOfConfig":"17"},{"size":15356,"mtime":1607249067202,"results":"28","hashOfConfig":"17"},{"size":15412,"mtime":1607405564742,"results":"29","hashOfConfig":"17"},{"size":985,"mtime":1607340114871,"results":"30","hashOfConfig":"17"},{"size":4700,"mtime":1607405089886,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"ufvpgw",{"filePath":"35","messages":"36","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"55"},{"filePath":"64","messages":"65","errorCount":17,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\React-bootstrap-demos\\arcdevelopment\\src\\index.js",[],["70","71"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\App.js",["72","73","74","75","76","77","78","79"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header.js",["80","81"],"import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box'\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Container } from '@material-ui/core';\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0\r\n    });\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbarMagin: {\r\n        ...theme.mixins.toolbar\r\n    },\r\n    customButton: {\r\n        justifyContent: 'center',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\r\n        border: 0,\r\n        borderRadius: 3,\r\n        boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\r\n        color: 'white',\r\n        height: 48,\r\n        padding: '0 30px',\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    return (\r\n        <React.Fragment>\r\n            <ElevationScroll>\r\n                <AppBar position=\"fixed\" color=\"secondary\">\r\n                    <Toolbar>\r\n                        <Typography variant=\"h5\">\r\n                            Nafaes International\r\n                    </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <div className={classes.toolbarMagin} />\r\n           \r\n            {[...new Array(12)]\r\n                .map(\r\n                    () => `Cras mattis consectetur purus sit amet fermentum.\r\n                Cras justo odio, dapibus ac facilisis in, egestas eget quam.\r\n                Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\r\n                Praesent commodo cursus magna, vel scelerisque nisl consectetur et.`,\r\n                )\r\n                .join('\\n')}\r\n            <br /> <br /> <br />\r\n           \r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Button variant='contained' className={classes.customButton}>Click me !</Button>\r\n            </Box>\r\n           \r\n        </React.Fragment>\r\n    );\r\n}","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\ContainerDemo.js",[],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header2.js",["82","83","84"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Theme.js",[],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\menubar.js",["85","86"],"import React, { Component } from 'react';\r\nimport List from 'material-ui/core/List';\r\nimport ListItem from 'material-ui/core/ListItem';\r\nimport ListItemText from 'material-ui/core/ListItemText';\r\nimport Collapse from 'material-ui/core/Collapse';\r\nimport ExpandLess from 'material-ui/icons/ExpandLess';\r\nimport ExpandMore from 'material-ui/icons/ExpandMore';\r\nimport Drawer from 'material-ui/core/Drawer';\r\nimport { withStyles } from 'material-ui/core/styles';\r\nimport { Link } from 'react-router-dom';\r\nimport menuItems from './menuItems';\r\nconst styles = {\r\n  list: {\r\n    width: 250,\r\n  },\r\n  links: {\r\n    textDecoration:'none',\r\n  },\r\n  menuHeader: {\r\n    paddingLeft: '30px'\r\n  }\r\n};\r\nclass MenuBar extends Component {\r\n  constructor( props ) {\r\n    super( props )\r\n    this.state = {}\r\n  }\r\n// this method sets the current state of a menu item i.e whether it is in expanded or collapsed or a collapsed state\r\nhandleClick( item ) {\r\n    this.setState( prevState => ( \r\n      { [ item ]: !prevState[ item ] } \r\n    ) )\r\n  }\r\n// if the menu item doesn't have any child, this method simply returns a clickable menu item that redirects to any location and if there is no child this method uses recursion to go until the last level of children and then returns the item by the first condition.\r\nhandler( children ) {\r\n    const { classes } = this.props\r\n    const { state } = this\r\nreturn children.map( ( subOption ) => {\r\n      if ( !subOption.children ) {\r\n        return (\r\n          <div key={ subOption.name }>\r\n            <ListItem \r\n              button \r\n              key={ subOption.name }>\r\n              <Link \r\n                to={ subOption.url }\r\n                className={ classes.links }>\r\n                <ListItemText \r\n                  inset \r\n                  primary={ subOption.name } \r\n                />\r\n              </Link>\r\n            </ListItem>\r\n          </div>\r\n        )\r\n      }\r\n      return (\r\n        <div key={ subOption.name }>\r\n          <ListItem \r\n            button \r\n            onClick={ () => this.handleClick( subOption.name ) }>\r\n            <ListItemText \r\n              inset \r\n              primary={ subOption.name } />\r\n            { state[ subOption.name ] ? \r\n              <ExpandLess /> :\r\n              <ExpandMore />\r\n            }\r\n          </ListItem>\r\n          <Collapse \r\n            in={ state[ subOption.name ] } \r\n            timeout=\"auto\" \r\n            unmountOnExit\r\n          >\r\n            { this.handler( subOption.children ) }\r\n          </Collapse>\r\n        </div>\r\n      )\r\n    } )\r\n  }\r\nrender() {\r\n    const { classes, drawerOpen, menuOptions } = this.props\r\n    return (\r\n      <div className={classes.list}>\r\n        <Drawer \r\n          variant=\"persistent\" \r\n          anchor=\"left\"\r\n          open\r\n          classes={ { paper: classes.list } }>\r\n          <div>\r\n            <List>\r\n              <ListItem \r\n                key=\"menuHeading\"\r\n                divider\r\n                disableGutters\r\n              >\r\n                <ListItemText\r\n                className={ classes.menuHeader }\r\n                  inset\r\n                  primary=\"Nested Menu\"\r\n                />\r\n              </ListItem>\r\n            { this.handler( menuItems.data ) }\r\n            </List>\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default withStyles(styles)(MenuBar)","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header3.js",["87","88","89","90","91"],"import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nimport logo from '../../assets/Nafaeslogonew.png';\r\n\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0\r\n    });\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbarMagin: {\r\n        ...theme.mixins.toolbar,\r\n        marginBottom: \"1.2em\"\r\n    },\r\n    logoContainer: {\r\n        padding: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    logo: {\r\n        height: \"4.5em\",\r\n        marginLeft: \"1em\",\r\n        padding: \"0.20em\"\r\n    },\r\n    tabContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: \"1em\"\r\n    },\r\n    tab: {\r\n        ...theme.typography.tab,\r\n        minWidth: 15,\r\n        marginLeft: \"25px\"\r\n    },\r\n    estimateButton: {\r\n        ...theme.typography.button,\r\n        marginRight: \"1em\",\r\n        borderRadius: \"50px\",\r\n        height: \"36px\"\r\n    },\r\n    menu: {\r\n        backgroundColor: theme.palette.common.orange,\r\n        color: \"inherit\",\r\n        borderRadius: \"0px\",\r\n    },\r\n    menuItem: {\r\n        ...theme.typography.tab,\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1\r\n        }\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const [open, setOpen] = useState(false);\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\r\n    const handleChange = (e, value) => {\r\n        setValue(value)\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n        setOpen(true)\r\n    };\r\n\r\n    const handleMenuItemClick = (e, i) => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n        setSelectedIndex(i)\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null)\r\n        setOpen(false)\r\n    };\r\n\r\n    const menuOptions = [\r\n        { name: \"Services\", link: \"/services\" },\r\n        { name: \"Custom Software Development\", link: \"/customsoftware\" },\r\n        { name: \"Mobile App Development\", link: \"/mobileapps\" },\r\n        { name: \"Website Development\", link: \"/websites\" }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if (window.location.pathname === \"/\" && value !== 0) {\r\n            setValue(0);\r\n        } else if (window.location.pathname === \"/services\" && value !== 1) {\r\n            setValue(1);\r\n        } else if (window.location.pathname === \"/revolution\" && value !== 2) {\r\n            setValue(2)\r\n        } else if (window.location.pathname === \"/about\" && value !== 3) {\r\n            setValue(3)\r\n        } else if (window.location.pathname === \"/contact\" && value !== 4) {\r\n            setValue(4)\r\n        } else if (window.location.pathname === \"/estimate\" && value !== 5) {\r\n            setValue(5)\r\n        }\r\n\r\n        switch (window.location.pathname) {\r\n            case \"/\":\r\n                if (value !== 0) {\r\n                    setValue(0)\r\n                }\r\n            case \"/services\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(0)\r\n                }\r\n                break;\r\n            case \"/customsoftware\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(1)\r\n                }\r\n                break;\r\n            case \"/mobileapps\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(2)\r\n                }\r\n                break;\r\n            case \"/websites\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(3)\r\n                }\r\n                break;\r\n            case \"/revolution\":\r\n                if (value !== 2) {\r\n                    setValue(2)\r\n                }\r\n                break;\r\n            case \"/about\":\r\n                if (value !== 3) {\r\n                    setValue(3)\r\n                }\r\n                break;\r\n            case \"/contact\":\r\n                if (value !== 4) {\r\n                    setValue(4)\r\n                }\r\n                break;\r\n            case \"/estimate\":\r\n                if (value !== 5) {\r\n                    setValue(5)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [value]);\r\n\r\n    const tabs = (\r\n        <React.Fragment>\r\n            \r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ElevationScroll>\r\n                <AppBar position=\"fixed\" color=\"secondary\">\r\n                    <Toolbar disableGutters>\r\n                        <Button component={Link} to=\"/\"\r\n                            onClick={() => setValue(0)}\r\n                            className={classes.logoContainer} >\r\n                            <img alt=\"company logo\" className={classes.logo} src={logo} />\r\n                        </Button>\r\n                        <Tabs value={value}\r\n                            onChange={handleChange}\r\n                            className={classes.tabContainer}\r\n                            indicatorColor=\"secondary\"\r\n                        >\r\n                            <Tab className={classes.tab} component={Link} to=\"/\" label=\"Home\" />\r\n                            <Tab\r\n                                aria-owns={anchorEl ? \"simple-menu\" : undefined}\r\n                                aria-haspopup={anchorEl ? \"true\" : undefined}\r\n                                className={classes.tab}\r\n                                component={Link}\r\n                                onMouseOver={event => handleClick(event)}\r\n                                to=\"/services\"\r\n                                label=\"Services\" />\r\n                            <Tab className={classes.tab} component={Link} to=\"/revolution\" label=\"The Revolution\" />\r\n                            <Tab className={classes.tab} component={Link} to=\"/about\" label=\"About Us\" />\r\n                            <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact Us\" />\r\n                        </Tabs>\r\n                        <Button\r\n                            className={classes.estimateButton}\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                        >\r\n                            Free Estimate\r\n                        </Button>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            open={open}\r\n                            onClose={handleClose}\r\n                            classes={{ paper: classes.menu }}\r\n                            MenuListProps={{ onMouseLeave: handleClose }}\r\n                            elevation={0}\r\n                        >\r\n                            {menuOptions.map((option, i) => (\r\n                                <MenuItem key={option}\r\n                                    component={Link}\r\n                                    to={option.link}\r\n                                    classes={{ root: classes.menuItem }}\r\n                                    onClick={(event) => {\r\n                                        handleMenuItemClick(event, i);\r\n                                        setValue(1);\r\n                                        handleClose();\r\n                                    }}\r\n                                    selected={i === selectedIndex && value === 1}\r\n                                >\r\n                                    {option.name}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Menu>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <div className={classes.toolbarMagin} />\r\n        </React.Fragment>\r\n    );\r\n}","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header4.js",["92","93"],"import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport logo from '../../assets/Nafaeslogonew.png';\r\n\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0\r\n    });\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbarMagin: {\r\n        ...theme.mixins.toolbar,\r\n        marginBottom: \"1.3em\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginBottom: \"1.2em\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginBottom: \"1em\"\r\n        }\r\n    },\r\n    logoContainer: {\r\n        padding: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    logo: {\r\n        height: \"4.5em\",\r\n        marginLeft: \"1em\",\r\n        padding: \"0.20em\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"4em\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            height: \"3.5em\"\r\n        }\r\n    },\r\n    tabContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: \"1em\"\r\n    },\r\n    tab: {\r\n        ...theme.typography.tab,\r\n        minWidth: 15,\r\n        marginLeft: \"25px\"\r\n    },\r\n    estimateButton: {\r\n        ...theme.typography.button,\r\n        marginRight: \"1em\",\r\n        borderRadius: \"50px\",\r\n        height: \"36px\"\r\n    },\r\n    menu: {\r\n        backgroundColor: theme.palette.common.orange,\r\n        color: \"inherit\",\r\n        borderRadius: \"0px\",\r\n    },\r\n    menuItem: {\r\n        ...theme.typography.tab,\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1\r\n        }\r\n    },\r\n    drawerIcon: {\r\n        height: \"40px\",\r\n        width: \"40px\"\r\n    },\r\n    drawerIconContainer: {\r\n        marginLeft: \"auto\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    drawer: {\r\n        backgroundColor: theme.palette.common.orange\r\n    },\r\n    drawerItem: {\r\n        ...theme.typography.tab,\r\n        color: \"inherit\",\r\n        opacity: 0.7,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \".80rem\"\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \".80rem\"\r\n        }\r\n    },\r\n    drawerItemSelected: {\r\n        opacity: 1\r\n    },\r\n    drawerItemEstimate: {\r\n        backgroundColor: theme.palette.common.blue,\r\n        color: \"#fff\"\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent); //for IOS only\r\n    const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    // const [open, setOpen] = useState(false); //before change\r\n    const [openMenu, setOpenMenu] = useState(false); //After change\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\r\n    const handleChange = (e, newValue) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n        // setOpen(true) //before change\r\n        setOpenMenu(true) //After change\r\n    };\r\n\r\n    const handleMenuItemClick = (e, i) => {\r\n        setAnchorEl(null)\r\n        // setOpen(false) //before change\r\n        setOpenMenu(false) //After change\r\n        setSelectedIndex(i)\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null)\r\n        // setOpen(false) //before change\r\n        setOpenMenu(false) //After change\r\n    };\r\n\r\n    const menuOptions = [\r\n        { name: \"Services\", link: \"/services\" },\r\n        { name: \"Custom Software Development\", link: \"/customsoftware\" },\r\n        { name: \"Mobile App Development\", link: \"/mobileapps\" },\r\n        { name: \"Website Development\", link: \"/websites\" }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        if (window.location.pathname === \"/\" && value !== 0) {\r\n            setValue(0);\r\n        } else if (window.location.pathname === \"/services\" && value !== 1) {\r\n            setValue(1);\r\n        } else if (window.location.pathname === \"/revolution\" && value !== 2) {\r\n            setValue(2)\r\n        } else if (window.location.pathname === \"/about\" && value !== 3) {\r\n            setValue(3)\r\n        } else if (window.location.pathname === \"/contact\" && value !== 4) {\r\n            setValue(4)\r\n        } else if (window.location.pathname === \"/estimate\" && value !== 5) {\r\n            setValue(5)\r\n        }\r\n\r\n        switch (window.location.pathname) {\r\n            case \"/\":\r\n                if (value !== 0) {\r\n                    setValue(0)\r\n                }\r\n            case \"/services\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(0)\r\n                }\r\n                break;\r\n            case \"/customsoftware\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(1)\r\n                }\r\n                break;\r\n            case \"/mobileapps\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(2)\r\n                }\r\n                break;\r\n            case \"/websites\":\r\n                if (value !== 1) {\r\n                    setValue(1)\r\n                    setSelectedIndex(3)\r\n                }\r\n                break;\r\n            case \"/revolution\":\r\n                if (value !== 2) {\r\n                    setValue(2)\r\n                }\r\n                break;\r\n            case \"/about\":\r\n                if (value !== 3) {\r\n                    setValue(3)\r\n                }\r\n                break;\r\n            case \"/contact\":\r\n                if (value !== 4) {\r\n                    setValue(4)\r\n                }\r\n                break;\r\n            case \"/estimate\":\r\n                if (value !== 5) {\r\n                    setValue(5)\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [value]);\r\n\r\n    const tabs = (\r\n        <React.Fragment>\r\n            <Tabs value={value}\r\n                onChange={handleChange}\r\n                className={classes.tabContainer}\r\n                indicatorColor=\"secondary\"\r\n            >\r\n                <Tab className={classes.tab} component={Link} to=\"/\" label=\"Home\" />\r\n                <Tab\r\n                    aria-owns={anchorEl ? \"simple-menu\" : undefined}\r\n                    aria-haspopup={anchorEl ? \"true\" : undefined}\r\n                    className={classes.tab}\r\n                    component={Link}\r\n                    onMouseOver={event => handleClick(event)}\r\n                    to=\"/services\"\r\n                    label=\"Services\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/revolution\" label=\"The Revolution\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/about\" label=\"About Us\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact Us\" />\r\n            </Tabs>\r\n            <Button\r\n                className={classes.estimateButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Free Estimate\r\n                        </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                open={openMenu}\r\n                onClose={handleClose}\r\n                classes={{ paper: classes.menu }}\r\n                MenuListProps={{ onMouseLeave: handleClose }}\r\n                elevation={0}\r\n            >\r\n                {menuOptions.map((option, i) => (\r\n                    <MenuItem key={option}\r\n                        component={Link}\r\n                        to={option.link}\r\n                        classes={{ root: classes.menuItem }}\r\n                        onClick={(event) => {\r\n                            handleMenuItemClick(event, i);\r\n                            setValue(1);\r\n                            handleClose();\r\n                        }}\r\n                        selected={i === selectedIndex && value === 1}\r\n                    >\r\n                        {option.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n\r\n    const drawer = (\r\n        <React.Fragment>\r\n            <SwipeableDrawer\r\n                // iOS has a \"swipe to go back\" feature that interferes with the discovery feature, \r\n                // so discovery has to be disabled.For Optimise mobile performance.\r\n                disableBackdropTransition={!iOS} disableDiscovery={iOS}\r\n                open={openDrawer}\r\n                onClose={() => setOpenDrawer(false)}\r\n                onOpen={() => setOpenDrawer(true)}\r\n                classes={{ paper: classes.drawer }}\r\n            >\r\n                <List disablePadding>\r\n                    <ListItem\r\n                        onClick={() => {setOpenDrawer(false); setValue(0)}}\r\n                        divider button\r\n                        component={Link} to=\"/\"\r\n                        selected={value === 0}\r\n                        >\r\n                        <ListItemText\r\n                            className={value === 0 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Home\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => {setOpenDrawer(false); setValue(1)}}\r\n                        divider button\r\n                        component={Link} to=\"/services\"\r\n                        selected={value === 1}\r\n                        >\r\n                        <ListItemText\r\n                            className={value === 1 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Services\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => {setOpenDrawer(false); setValue(2)}}\r\n                        divider button\r\n                        component={Link} to=\"/revolution\"\r\n                        selected={value === 2}\r\n                        >\r\n                        <ListItemText\r\n                            className={value === 2 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            The Revolution\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => {setOpenDrawer(false); setValue(3)}}\r\n                        divider button\r\n                        component={Link} to=\"/about\"\r\n                        selected={value === 3}\r\n                        >\r\n                        <ListItemText\r\n                           className={value === 3 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            About Us\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => {setOpenDrawer(false); setValue(4)}}\r\n                        divider button\r\n                        component={Link} to=\"/contact\"\r\n                        selected={value === 4}\r\n                        >\r\n                        <ListItemText \r\n                            className={value === 4 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Contact Us\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => {setOpenDrawer(false); setValue(5)}}\r\n                        divider button\r\n                        className={classes.drawerItemEstimate}\r\n                        component={Link} to=\"/estimate\"\r\n                        selected={value === 5}\r\n                        >\r\n                        <ListItemText\r\n                            className={value === 5 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Free Estimate\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </SwipeableDrawer>\r\n            <IconButton className={classes.drawerIconContainer}\r\n                onClick={() => setOpenDrawer(!openDrawer)}\r\n                disableRipple\r\n            >\r\n                <MenuIcon className={classes.drawerIcon} />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ElevationScroll>\r\n                <AppBar position=\"fixed\" color=\"secondary\">\r\n                    <Toolbar disableGutters>\r\n                        <Button component={Link} to=\"/\"\r\n                            onClick={() => setValue(0)}\r\n                            className={classes.logoContainer} >\r\n                            <img alt=\"company logo\" className={classes.logo} src={logo} />\r\n                        </Button>\r\n                        {matches ? drawer : tabs}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <div className={classes.toolbarMagin} />\r\n        </React.Fragment>\r\n    );\r\n}",["94","95"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header5.js",["96","97","98"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header6.js",["99","100","101"],"import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport logo from '../../assets/Nafaeslogonew.png';\r\n\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0\r\n    });\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbarMagin: {\r\n        ...theme.mixins.toolbar,\r\n        marginBottom: \"1.3em\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginBottom: \"1.2em\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginBottom: \"1em\"\r\n        }\r\n    },\r\n    logoContainer: {\r\n        padding: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    logo: {\r\n        height: \"4.5em\",\r\n        marginLeft: \"1em\",\r\n        padding: \"0.20em\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"4em\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            height: \"3.5em\"\r\n        }\r\n    },\r\n    tabContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: \"1em\"\r\n    },\r\n    tab: {\r\n        ...theme.typography.tab,\r\n        minWidth: 15,\r\n        marginLeft: \"25px\"\r\n    },\r\n    estimateButton: {\r\n        ...theme.typography.button,\r\n        marginRight: \"1em\",\r\n        borderRadius: \"50px\",\r\n        height: \"36px\"\r\n    },\r\n    menu: {\r\n        backgroundColor: theme.palette.common.orange,\r\n        color: \"inherit\",\r\n        borderRadius: \"0px\",\r\n    },\r\n    menuItem: {\r\n        ...theme.typography.tab,\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1\r\n        }\r\n    },\r\n    drawerIcon: {\r\n        height: \"40px\",\r\n        width: \"40px\"\r\n    },\r\n    drawerIconContainer: {\r\n        marginLeft: \"auto\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    drawer: {\r\n        backgroundColor: theme.palette.common.orange\r\n    },\r\n    drawerItem: {\r\n        ...theme.typography.tab,\r\n        color: \"inherit\",\r\n        opacity: 0.7,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \".80rem\"\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \".80rem\"\r\n        }\r\n    },\r\n    drawerItemSelected: {\r\n        opacity: 1\r\n    },\r\n    drawerItemEstimate: {\r\n        backgroundColor: theme.palette.common.blue,\r\n        color: \"#fff\"\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent); //for IOS only\r\n    const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    // const [open, setOpen] = useState(false); //before change\r\n    const [openMenu, setOpenMenu] = useState(false); //After change\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\r\n    const handleChange = (e, newValue) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n        // setOpen(true) //before change\r\n        setOpenMenu(true) //After change\r\n    };\r\n\r\n    const handleMenuItemClick = (e, i) => {\r\n        setAnchorEl(null)\r\n        // setOpen(false) //before change\r\n        setOpenMenu(false) //After change\r\n        setSelectedIndex(i)\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null)\r\n        // setOpen(false) //before change\r\n        setOpenMenu(false) //After change\r\n    };\r\n\r\n    const menuOptions = [\r\n        { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\r\n        { name: \"Custom Software Development\", link: \"/customsoftware\", activeIndex: 1, selectedIndex: 1 },\r\n        { name: \"Mobile App Development\", link: \"/mobileapps\", activeIndex: 1, selectedIndex: 2 },\r\n        { name: \"Website Development\", link: \"/websites\", activeIndex: 1, selectedIndex: 3 }\r\n    ]\r\n\r\n    const routes = [\r\n        { name: \"Home\", link: \"/\", activeIndex: 0 },\r\n        {\r\n            name: \"Services\", link: \"/services\", activeIndex: 1,\r\n            ariaOwns: anchorEl ? \"simple-menu\" : undefined,\r\n            ariaPopup: anchorEl ? \"true\" : undefined,\r\n            mouseOver: event => handleClick(event)\r\n        },\r\n        { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\r\n        { name: \"About Us\", link: \"/about\", activeIndex: 3 },\r\n        { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        [...menuOptions, ...routes].forEach(route => {\r\n            switch (window.location.pathname) {\r\n                case `${route.link}`:\r\n                    if (value !== route.activeIndex) {\r\n                        setValue(route.activeIndex)\r\n                        if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\r\n                            setSelectedIndex(route.selectedIndex)\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }, [value, menuOptions, selectedIndex, routes]);\r\n\r\n    const tabs = (\r\n        <React.Fragment>\r\n            <Tabs value={value}\r\n                onChange={handleChange}\r\n                className={classes.tabContainer}\r\n                indicatorColor=\"secondary\"\r\n            >\r\n                {routes.map((route, index) => (\r\n                    <Tab\r\n                        className={classes.tab} component={Link}\r\n                        to={route.link} label={route.name}\r\n                        aria-owns={route.ariaOwns}\r\n                        aria-haspopup={route.ariaPopup}\r\n                        onMouseOver={route.mouseOver}\r\n                    />\r\n                ))}\r\n                {/* <Tab className={classes.tab} component={Link} to=\"/\" label=\"Home\" />\r\n                <Tab\r\n                    aria-owns={ }\r\n                    aria-haspopup={ }\r\n                    className={classes.tab}\r\n                    component={Link}\r\n                    onMouseOver={ }\r\n                    to=\"/services\"\r\n                    label=\"Services\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/revolution\" label=\"The Revolution\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/about\" label=\"About Us\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact Us\" /> */}\r\n            </Tabs>\r\n            <Button\r\n                className={classes.estimateButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Free Estimate\r\n                        </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                open={openMenu}\r\n                onClose={handleClose}\r\n                classes={{ paper: classes.menu }}\r\n                MenuListProps={{ onMouseLeave: handleClose }}\r\n                elevation={0}\r\n            >\r\n                {menuOptions.map((option, i) => (\r\n                    <MenuItem key={option}\r\n                        component={Link}\r\n                        to={option.link}\r\n                        classes={{ root: classes.menuItem }}\r\n                        onClick={(event) => {\r\n                            handleMenuItemClick(event, i);\r\n                            setValue(1);\r\n                            handleClose();\r\n                        }}\r\n                        selected={i === selectedIndex && value === 1}\r\n                    >\r\n                        {option.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n\r\n    const drawer = (\r\n        <React.Fragment>\r\n            <SwipeableDrawer\r\n                // iOS has a \"swipe to go back\" feature that interferes with the discovery feature, \r\n                // so discovery has to be disabled.For Optimise mobile performance.\r\n                disableBackdropTransition={!iOS} disableDiscovery={iOS}\r\n                open={openDrawer}\r\n                onClose={() => setOpenDrawer(false)}\r\n                onOpen={() => setOpenDrawer(true)}\r\n                classes={{ paper: classes.drawer }}\r\n            >\r\n                <List disablePadding>\r\n                    <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(0) }}\r\n                        divider button\r\n                        component={Link} to=\"/\"\r\n                        selected={value === 0}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 0 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Home\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => { setOpenDrawer(false); setValue(1) }}\r\n                        divider button\r\n                        component={Link} to=\"/services\"\r\n                        selected={value === 1}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 1 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Services\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => { setOpenDrawer(false); setValue(2) }}\r\n                        divider button\r\n                        component={Link} to=\"/revolution\"\r\n                        selected={value === 2}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 2 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            The Revolution\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => { setOpenDrawer(false); setValue(3) }}\r\n                        divider button\r\n                        component={Link} to=\"/about\"\r\n                        selected={value === 3}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 3 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            About Us\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => { setOpenDrawer(false); setValue(4) }}\r\n                        divider button\r\n                        component={Link} to=\"/contact\"\r\n                        selected={value === 4}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 4 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Contact Us\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem onClick={() => { setOpenDrawer(false); setValue(5) }}\r\n                        divider button\r\n                        className={classes.drawerItemEstimate}\r\n                        component={Link} to=\"/estimate\"\r\n                        selected={value === 5}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 5 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Free Estimate\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </SwipeableDrawer>\r\n            <IconButton className={classes.drawerIconContainer}\r\n                onClick={() => setOpenDrawer(!openDrawer)}\r\n                disableRipple\r\n            >\r\n                <MenuIcon className={classes.drawerIcon} />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ElevationScroll>\r\n                <AppBar position=\"fixed\" color=\"secondary\">\r\n                    <Toolbar disableGutters>\r\n                        <Button component={Link} to=\"/\"\r\n                            onClick={() => setValue(0)}\r\n                            className={classes.logoContainer} >\r\n                            <img alt=\"company logo\" className={classes.logo} src={logo} />\r\n                        </Button>\r\n                        {matches ? drawer : tabs}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <div className={classes.toolbarMagin} />\r\n        </React.Fragment>\r\n    );\r\n}","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header7.js",["102","103","104"],"import React, { useState, useEffect } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport logo from '../../assets/Nafaeslogonew.png';\r\n\r\n\r\n\r\nfunction ElevationScroll(props) {\r\n    const { children } = props;\r\n    const trigger = useScrollTrigger({\r\n        disableHysteresis: true,\r\n        threshold: 0\r\n    });\r\n    return React.cloneElement(children, {\r\n        elevation: trigger ? 4 : 0,\r\n    });\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    toolbarMagin: {\r\n        ...theme.mixins.toolbar,\r\n        marginBottom: \"1.3em\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            marginBottom: \"1.2em\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            marginBottom: \"1em\"\r\n        }\r\n    },\r\n    logoContainer: {\r\n        padding: 0,\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    logo: {\r\n        height: \"4.5em\",\r\n        marginLeft: \"1em\",\r\n        padding: \"0.20em\",\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            height: \"4em\",\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            height: \"3.5em\"\r\n        }\r\n    },\r\n    tabContainer: {\r\n        marginLeft: 'auto',\r\n        marginRight: \"1em\"\r\n    },\r\n    tab: {\r\n        ...theme.typography.tab,\r\n        minWidth: 15,\r\n        marginLeft: \"25px\"\r\n    },\r\n    estimateButton: {\r\n        ...theme.typography.button,\r\n        marginRight: \"1em\",\r\n        borderRadius: \"50px\",\r\n        height: \"36px\"\r\n    },\r\n    menu: {\r\n        backgroundColor: theme.palette.common.orange,\r\n        color: \"inherit\",\r\n        borderRadius: \"0px\",\r\n    },\r\n    menuItem: {\r\n        ...theme.typography.tab,\r\n        opacity: 0.7,\r\n        \"&:hover\": {\r\n            opacity: 1\r\n        }\r\n    },\r\n    drawerIcon: {\r\n        height: \"40px\",\r\n        width: \"40px\"\r\n    },\r\n    drawerIconContainer: {\r\n        marginLeft: \"auto\",\r\n        \"&:hover\": {\r\n            backgroundColor: \"transparent\"\r\n        }\r\n    },\r\n    drawer: {\r\n        backgroundColor: theme.palette.common.orange\r\n    },\r\n    drawerItem: {\r\n        ...theme.typography.tab,\r\n        color: \"inherit\",\r\n        opacity: 0.7,\r\n        [theme.breakpoints.down(\"sm\")]: {\r\n            fontSize: \".80rem\"\r\n        },\r\n        [theme.breakpoints.down(\"xs\")]: {\r\n            fontSize: \".80rem\"\r\n        }\r\n    },\r\n    drawerItemSelected: {\r\n        opacity: 1\r\n    },\r\n    drawerItemEstimate: {\r\n        backgroundColor: theme.palette.common.blue,\r\n        color: \"#fff\"\r\n    }\r\n}));\r\n\r\nexport default function Header(props) {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const iOS = process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent); //for IOS only\r\n    const matches = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n    const [openDrawer, setOpenDrawer] = useState(false);\r\n    const [value, setValue] = useState(0);\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    // const [open, setOpen] = useState(false); //before change\r\n    const [openMenu, setOpenMenu] = useState(false); //After change\r\n    const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n\r\n    const handleChange = (e, newValue) => {\r\n        setValue(newValue)\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n        setAnchorEl(e.currentTarget)\r\n        // setOpen(true) //before change\r\n        setOpenMenu(true) //After change\r\n    };\r\n\r\n    const handleMenuItemClick = (e, i) => {\r\n        setAnchorEl(null)\r\n        // setOpen(false) //before change\r\n        setOpenMenu(false) //After change\r\n        setSelectedIndex(i)\r\n    };\r\n\r\n    const handleClose = (e) => {\r\n        setAnchorEl(null)\r\n        // setOpen(false) //before change\r\n        setOpenMenu(false) //After change\r\n    };\r\n\r\n    const menuOptions = [\r\n        { name: \"Services\", link: \"/services\", activeIndex: 1, selectedIndex: 0 },\r\n        { name: \"Custom Software Development\", link: \"/customsoftware\", activeIndex: 1, selectedIndex: 1 },\r\n        { name: \"Mobile App Development\", link: \"/mobileapps\", activeIndex: 1, selectedIndex: 2 },\r\n        { name: \"Website Development\", link: \"/websites\", activeIndex: 1, selectedIndex: 3 }\r\n    ]\r\n\r\n    const routes = [\r\n        { name: \"Home\", link: \"/\", activeIndex: 0 },\r\n        {\r\n            name: \"Services\", link: \"/services\", activeIndex: 1,\r\n            ariaOwns: anchorEl ? \"simple-menu\" : undefined,\r\n            ariaPopup: anchorEl ? \"true\" : undefined,\r\n            mouseOver: event => handleClick(event)\r\n        },\r\n        { name: \"The Revolution\", link: \"/revolution\", activeIndex: 2 },\r\n        { name: \"About Us\", link: \"/about\", activeIndex: 3 },\r\n        { name: \"Contact Us\", link: \"/contact\", activeIndex: 4 }\r\n    ]\r\n\r\n    useEffect(() => {\r\n        [...menuOptions, ...routes].forEach(route => {\r\n            switch (window.location.pathname) {\r\n                case `${route.link}`:\r\n                    if (value !== route.activeIndex) {\r\n                        setValue(route.activeIndex)\r\n                        if (route.selectedIndex && route.selectedIndex !== selectedIndex) {\r\n                            setSelectedIndex(route.selectedIndex)\r\n                        }\r\n                    }\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        })\r\n    }, [value, menuOptions, selectedIndex, routes]);\r\n\r\n    const tabs = (\r\n        <React.Fragment>\r\n            <Tabs value={value}\r\n                onChange={handleChange}\r\n                className={classes.tabContainer}\r\n                indicatorColor=\"secondary\"\r\n            >\r\n                {routes.map((route, index) => (\r\n                    <Tab\r\n                        key={`${route}${index}`}\r\n                        className={classes.tab} component={Link}\r\n                        to={route.link} label={route.name}\r\n                        aria-owns={route.ariaOwns}\r\n                        aria-haspopup={route.ariaPopup}\r\n                        onMouseOver={route.mouseOver}\r\n                    />\r\n                ))}\r\n                {/* <Tab className={classes.tab} component={Link} to=\"/\" label=\"Home\" />\r\n                <Tab\r\n                    aria-owns={ }\r\n                    aria-haspopup={ }\r\n                    className={classes.tab}\r\n                    component={Link}\r\n                    onMouseOver={ }\r\n                    to=\"/services\"\r\n                    label=\"Services\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/revolution\" label=\"The Revolution\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/about\" label=\"About Us\" />\r\n                <Tab className={classes.tab} component={Link} to=\"/contact\" label=\"Contact Us\" /> */}\r\n            </Tabs>\r\n            <Button\r\n                className={classes.estimateButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n            >\r\n                Free Estimate\r\n                        </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                open={openMenu}\r\n                onClose={handleClose}\r\n                classes={{ paper: classes.menu }}\r\n                MenuListProps={{ onMouseLeave: handleClose }}\r\n                elevation={0}\r\n                keepMounted\r\n            >\r\n                {menuOptions.map((option, i) => (\r\n                    <MenuItem key={option}\r\n                        component={Link}\r\n                        to={option.link}\r\n                        classes={{ root: classes.menuItem }}\r\n                        onClick={(event) => {\r\n                            handleMenuItemClick(event, i);\r\n                            setValue(1);\r\n                            handleClose();\r\n                        }}\r\n                        selected={i === selectedIndex && value === 1}\r\n                    >\r\n                        {option.name}\r\n                    </MenuItem>\r\n                ))}\r\n            </Menu>\r\n        </React.Fragment>\r\n    )\r\n\r\n    const drawer = (\r\n        <React.Fragment>\r\n            <SwipeableDrawer\r\n                // iOS has a \"swipe to go back\" feature that interferes with the discovery feature, \r\n                // so discovery has to be disabled.For Optimise mobile performance.\r\n                disableBackdropTransition={!iOS} disableDiscovery={iOS}\r\n                open={openDrawer}\r\n                onClose={() => setOpenDrawer(false)}\r\n                onOpen={() => setOpenDrawer(true)}\r\n                classes={{ paper: classes.drawer }}\r\n            >\r\n                <List disablePadding>\r\n                    {routes.map(route => (\r\n                        <ListItem\r\n                            key={`${route}${route.activeIndex}`}\r\n                            divider button\r\n                            onClick={() => { setOpenDrawer(false); setValue(route.activeIndex) }}\r\n                            component={Link}\r\n                            to={route.link}\r\n                            selected={value === route.activeIndex}\r\n                        >\r\n                            <ListItemText\r\n                                classes={value === route.activeIndex ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                                disableTypography\r\n                            >\r\n                                {route.name}\r\n                            </ListItemText>\r\n                        </ListItem>\r\n                    ))}\r\n\r\n                    {/* <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(0) }}\r\n                        divider button\r\n                        component={Link} to=\"/\"\r\n                        selected={value === 0}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 0 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Home\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(1) }}\r\n                        divider button\r\n                        component={Link} to=\"/services\"\r\n                        selected={value === 1}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 1 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Services\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(2) }}\r\n                        divider button\r\n                        component={Link} to=\"/revolution\"\r\n                        selected={value === 2}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 2 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            The Revolution\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(3) }}\r\n                        divider button\r\n                        component={Link} to=\"/about\"\r\n                        selected={value === 3}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 3 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            About Us\r\n                        </ListItemText>\r\n                    </ListItem>\r\n\r\n                    <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(4) }}\r\n                        divider button\r\n                        component={Link} to=\"/contact\"\r\n                        selected={value === 4}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 4 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Contact Us\r\n                        </ListItemText>\r\n                    </ListItem> */}\r\n\r\n                    <ListItem\r\n                        onClick={() => { setOpenDrawer(false); setValue(5) }}\r\n                        divider button\r\n                        className={classes.drawerItemEstimate}\r\n                        component={Link} to=\"/estimate\"\r\n                        selected={value === 5}\r\n                    >\r\n                        <ListItemText\r\n                            className={value === 5 ? [classes.drawerItem, classes.drawerItemSelected] : classes.drawerItem}\r\n                            disableTypography\r\n                        >\r\n                            Free Estimate\r\n                        </ListItemText>\r\n                    </ListItem>\r\n                </List>\r\n            </SwipeableDrawer>\r\n            <IconButton className={classes.drawerIconContainer}\r\n                onClick={() => setOpenDrawer(!openDrawer)}\r\n                disableRipple\r\n            >\r\n                <MenuIcon className={classes.drawerIcon} />\r\n            </IconButton>\r\n        </React.Fragment>\r\n    )\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ElevationScroll>\r\n                <AppBar position=\"fixed\" color=\"secondary\">\r\n                    <Toolbar disableGutters>\r\n                        <Button component={Link} to=\"/\"\r\n                            onClick={() => setValue(0)}\r\n                            className={classes.logoContainer} >\r\n                            <img alt=\"company logo\" className={classes.logo} src={logo} />\r\n                        </Button>\r\n                        {matches ? drawer : tabs}\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </ElevationScroll>\r\n            <div className={classes.toolbarMagin} />\r\n        </React.Fragment>\r\n    );\r\n}","F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Header8.js",["105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\Footer.js",["123"],"F:\\React-bootstrap-demos\\arcdevelopment\\src\\components\\ui\\footergrid.js",["124"],{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","severity":1,"message":"130","line":5,"column":8,"nodeType":"131","messageId":"132","endLine":5,"endColumn":14},{"ruleId":"129","severity":1,"message":"133","line":6,"column":8,"nodeType":"131","messageId":"132","endLine":6,"endColumn":15},{"ruleId":"129","severity":1,"message":"134","line":7,"column":8,"nodeType":"131","messageId":"132","endLine":7,"endColumn":15},{"ruleId":"129","severity":1,"message":"135","line":8,"column":8,"nodeType":"131","messageId":"132","endLine":8,"endColumn":15},{"ruleId":"129","severity":1,"message":"136","line":9,"column":8,"nodeType":"131","messageId":"132","endLine":9,"endColumn":15},{"ruleId":"129","severity":1,"message":"137","line":10,"column":8,"nodeType":"131","messageId":"132","endLine":10,"endColumn":15},{"ruleId":"129","severity":1,"message":"138","line":11,"column":8,"nodeType":"131","messageId":"132","endLine":11,"endColumn":15},{"ruleId":"129","severity":1,"message":"139","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":14},{"ruleId":"129","severity":1,"message":"140","line":9,"column":8,"nodeType":"131","messageId":"132","endLine":9,"endColumn":12},{"ruleId":"129","severity":1,"message":"141","line":10,"column":10,"nodeType":"131","messageId":"132","endLine":10,"endColumn":19},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"129","severity":1,"message":"143","line":79,"column":12,"nodeType":"131","messageId":"132","endLine":79,"endColumn":25},{"ruleId":"129","severity":1,"message":"144","line":79,"column":27,"nodeType":"131","messageId":"132","endLine":79,"endColumn":43},{"ruleId":"129","severity":1,"message":"145","line":82,"column":22,"nodeType":"131","messageId":"132","endLine":82,"endColumn":32},{"ruleId":"129","severity":1,"message":"146","line":82,"column":34,"nodeType":"131","messageId":"132","endLine":82,"endColumn":45},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"129","severity":1,"message":"147","line":13,"column":8,"nodeType":"131","messageId":"132","endLine":13,"endColumn":21},{"ruleId":"129","severity":1,"message":"148","line":78,"column":11,"nodeType":"131","messageId":"132","endLine":78,"endColumn":16},{"ruleId":"149","severity":1,"message":"150","line":132,"column":13,"nodeType":"151","messageId":"152","endLine":137,"endColumn":23},{"ruleId":"129","severity":1,"message":"153","line":181,"column":11,"nodeType":"131","messageId":"132","endLine":181,"endColumn":15},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"149","severity":1,"message":"150","line":189,"column":13,"nodeType":"151","messageId":"152","endLine":194,"endColumn":23},{"ruleId":"125","replacedBy":"154"},{"ruleId":"127","replacedBy":"155"},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"156","severity":1,"message":"157","line":162,"column":11,"nodeType":"158","endLine":167,"endColumn":6},{"ruleId":"156","severity":1,"message":"159","line":169,"column":11,"nodeType":"158","endLine":175,"endColumn":6},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"156","severity":1,"message":"160","line":162,"column":11,"nodeType":"158","endLine":167,"endColumn":6},{"ruleId":"156","severity":1,"message":"161","line":169,"column":11,"nodeType":"158","endLine":180,"endColumn":6},{"ruleId":"129","severity":1,"message":"142","line":4,"column":8,"nodeType":"131","messageId":"132","endLine":4,"endColumn":11},{"ruleId":"156","severity":1,"message":"160","line":162,"column":11,"nodeType":"158","endLine":167,"endColumn":6},{"ruleId":"156","severity":1,"message":"161","line":169,"column":11,"nodeType":"158","endLine":180,"endColumn":6},{"ruleId":"162","severity":2,"message":"163","line":146,"column":9,"nodeType":"131","messageId":"164","endLine":146,"endColumn":17},{"ruleId":"162","severity":2,"message":"165","line":159,"column":9,"nodeType":"131","messageId":"164","endLine":159,"endColumn":25},{"ruleId":"162","severity":2,"message":"166","line":192,"column":25,"nodeType":"131","messageId":"164","endLine":192,"endColumn":30},{"ruleId":"162","severity":2,"message":"163","line":193,"column":25,"nodeType":"131","messageId":"164","endLine":193,"endColumn":33},{"ruleId":"162","severity":2,"message":"167","line":194,"column":76,"nodeType":"131","messageId":"164","endLine":194,"endColumn":89},{"ruleId":"162","severity":2,"message":"165","line":195,"column":29,"nodeType":"131","messageId":"164","endLine":195,"endColumn":45},{"ruleId":"156","severity":1,"message":"168","line":203,"column":8,"nodeType":"169","endLine":203,"endColumn":51,"suggestions":"170"},{"ruleId":"162","severity":2,"message":"166","line":203,"column":9,"nodeType":"131","messageId":"164","endLine":203,"endColumn":14},{"ruleId":"162","severity":2,"message":"167","line":203,"column":29,"nodeType":"131","messageId":"164","endLine":203,"endColumn":42},{"ruleId":"162","severity":2,"message":"166","line":207,"column":26,"nodeType":"131","messageId":"164","endLine":207,"endColumn":31},{"ruleId":"162","severity":2,"message":"163","line":249,"column":29,"nodeType":"131","messageId":"164","endLine":249,"endColumn":37},{"ruleId":"162","severity":2,"message":"167","line":252,"column":41,"nodeType":"131","messageId":"164","endLine":252,"endColumn":54},{"ruleId":"162","severity":2,"message":"166","line":252,"column":58,"nodeType":"131","messageId":"164","endLine":252,"endColumn":63},{"ruleId":"162","severity":2,"message":"163","line":278,"column":68,"nodeType":"131","messageId":"164","endLine":278,"endColumn":76},{"ruleId":"162","severity":2,"message":"166","line":281,"column":39,"nodeType":"131","messageId":"164","endLine":281,"endColumn":44},{"ruleId":"162","severity":2,"message":"163","line":365,"column":64,"nodeType":"131","messageId":"164","endLine":365,"endColumn":72},{"ruleId":"162","severity":2,"message":"166","line":369,"column":35,"nodeType":"131","messageId":"164","endLine":369,"endColumn":40},{"ruleId":"162","severity":2,"message":"163","line":396,"column":44,"nodeType":"131","messageId":"164","endLine":396,"endColumn":52},{"ruleId":"171","severity":1,"message":"172","line":31,"column":9,"nodeType":"173","endLine":31,"endColumn":87},{"ruleId":"171","severity":1,"message":"172","line":114,"column":13,"nodeType":"173","endLine":114,"endColumn":91},"no-native-reassign",["174"],"no-negated-in-lhs",["175"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'Header2' is defined but never used.","'Header3' is defined but never used.","'Header4' is defined but never used.","'Header5' is defined but never used.","'Header6' is defined but never used.","'Header7' is defined but never used.","'Footer' is defined but never used.","'Grid' is defined but never used.","'Container' is defined but never used.","'Box' is defined but never used.","'selectedIndex' is assigned a value but never used.","'setSelectedIndex' is assigned a value but never used.","'drawerOpen' is assigned a value but never used.","'menuOptions' is assigned a value but never used.","'useMediaQuery' is defined but never used.","'theme' is assigned a value but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'tabs' is assigned a value but never used.",["174"],["175"],"react-hooks/exhaustive-deps","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 192) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","VariableDeclarator","The 'routes' array makes the dependencies of useEffect Hook (at line 192) change on every render. Move it inside the useEffect callback. Alternatively, wrap the initialization of 'routes' in its own useMemo() Hook.","The 'menuOptions' array makes the dependencies of useEffect Hook (at line 197) change on every render. To fix this, wrap the initialization of 'menuOptions' in its own useMemo() Hook.","The 'routes' array makes the dependencies of useEffect Hook (at line 197) change on every render. To fix this, wrap the initialization of 'routes' in its own useMemo() Hook.","no-undef","'setValue' is not defined.","undef","'setSelectedIndex' is not defined.","'value' is not defined.","'selectedIndex' is not defined.","React Hook useEffect has unnecessary dependencies: 'selectedIndex' and 'value'. Either exclude them or remove the dependency array. Outer scope values like 'value' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["176"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"177","fix":"178"},"Update the dependencies array to be: [menuOptions, routes]",{"range":"179","text":"180"},[6557,6600],"[menuOptions, routes]"]